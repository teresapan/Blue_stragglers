Syntax: VERBOSE INTEGER

Make SM produce output on what it is doing if integer is > 0

In particular:
   Complain about things like division by zero, and logs of negative
   numbers the first time that they occur in a given expression
   Correct you when you use the wrong format to print a vector
   Identify the X11 device that you switch to with -dev [+-]
   Include all macros in macro listings, even those starting ##
   Indicate line where arithmetical errors occur
   List all non-printing key-bindings with LIST EDIT
   Note more than 40 curve crossings in SHADE
   Notify user if a ^C stopped the production of a hardcopy
   Output a little extra about RESTORE and SAVE
   Print lines beginning # while reading macro files
   Provide some context with APROPOS on help files
   Realise that a WINDOW number is out of range
   Report which lines are read from a file using READ
   Remind you that mixing LOCATION with WINDOW confuses people
   Say something about format and size of IMAGE files
   Tell you what keys to use with the cursor
   Warn about zero-length vectors
   Whinge about missing fields with DEFINE var READ # #
   Write a note when it finds out-of-range values while contouring IMAGE files
   
if INTEGER is two or greater, then also :
   Announce when the do, foreach, input, or macro stacks are extended
   Complain if an environment or SM variable is not defined
   Include `internal' variables in LIST DEFINE output
   Inform you when it seeks to a line in a data file
   List all key-bindings with LIST EDIT
   Note attempts to unput off bottoms of buffers
   Point out attempts to delete local variables and vectors
   Print the fraction of axes covered by the tick labels
   Prompt for variables, even if they are on the macro buffer
   Protest if you reference an undefined history number
   Remark if a variable is referenced in a graphcap SY string, but not provided
   Remind you that only a finite number of KEY commands can be processed
   Repeat complaint about things like division by zero, and logs of
   negative numbers evey time that they occur
   Report vectors of different lengths in PRINT
   Say when a vector is used as a scaler
   Tell you when vectors are redefined

if INTEGER is three or greater, then also :
   List each macro name just prior to expansion

if INTEGER is four or greater, then also :
   Show expansions of variables
   Print each token as it is recognised along with its text. The number in
   column 1 is the value of `noexpand', the level of nesting of {} loops

if INTEGER is five or greater, then also :
   Print the contents of DO, FOREACH, IF, and MACRO command lists

If INTEGER is negative, and DEBUG was defined when the parser was compiled,
you will get VERY detailed information as to what is going on. This can
be turned off again with another negative value
